import {Project} from "@qpa/core";import {expect} from "vitest";import * as dotenv from 'dotenv';import * as dotenvExpand from 'dotenv-expand';import {TencentCloud} from "../src/factory.ts";// 首先加载 .env 文件中的原始键值对// dotenv.config() 返回一个包含 parsed 属性的对象，其中是解析后的键值对const myEnv = dotenv.config();// 然后使用 dotenvExpand.expand() 来处理变量扩展// 它会修改 process.env，并返回一个包含所有扩展后变量的对象dotenvExpand.expand(myEnv);export class TextFixture {  readonly project = Project.of({name: "unit_test"});  readonly tc = new TencentCloud(this.project, {    credential: {      secretId: process.env.TENCENTCLOUD_SECRET_ID!,      secretKey: process.env.TENCENTCLOUD_SECRET_KEY!,    },  })  static of(): TextFixture {    return new TextFixture();  }  async reset() {    await this.project.destroy();    expect(this.project.resourceInstances.length).toBe(0);    await this.project.refresh();    expect(this.project.resourceInstances.length).toBe(0);  }}