#!/usr/bin/env bash
# shellcheck disable=SC2317
set -o errtrace  # -E trap inherited in sub script
set -o errexit   # -e
set -o functrace # -T If set, any trap on DEBUG and RETURN are inherited by shell functions
set -o pipefail  # default pipeline status==last command status, If set, status=any command fail


CLI_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
cd "$CLI_DIR"

# shellcheck disable=SC1091
source "../../common.bash"
cd "$CLI_DIR"

####################################################################################
# app script
# 应用项目补充的公共脚本，不在bake维护范围
# 此位置以上的全都是bake工具脚本，copy走可以直接用，之下的为项目特定cmd，自己弄
####################################################################################

##########################################
# app cmd script
# 应用的命令脚本
##########################################

status() {
  _run echo "cli: out ip: $(curl ipinfo.io/ip 2>/dev/null)"
}

build() {
  # bun build direct_mode.ts --outfile dist/index.js
  all() {
    clean
    mkdir -p ./dist
#    _run npx tsc --noEmit
    _run bun build --root ./src --outdir=./dist --sourcemap=linked --format=esm --target=node --entry-as-name src/index.ts

npm install --save-dev esbuild



    # 构建 Composite 项目 (带有 references 时推荐): tsc --build 或 tsc -b。这是用于协调 Monorepo 中 Composite 项目构建的命令。
    # 它会读取 tsconfig.json 并根据 composite 和 references 来决定做什么（包括检查依赖、使用 .tsbuildinfo、生成 .js 和/或 .d.ts）。
    # 这是在 Monorepo 中构建子项目的推荐命令。
    _run  pnpm exec  tsc --build  ./tsconfig.build.json

    _run bun pm pack --destination=./build/
    _run tar -xzf ./build/*.tgz -C "./build"
  }
  exe() { bun build --compile --outfile ./dist/pa ./src/index.ts;}
  lib() {
    bun build ./src/index.ts --outdir ./dist
    bunx tsc --emitDeclarationOnly --declaration --project tsconfig.json
  }
}

publish() {
  dry-run() {
    npm pack
    npm publish --dry-run --registry=https://registry.npmjs.org/
  }

   #npm publish --workspaces
#  npm version patch: 增加补丁版本号（例如从 1.0.0 到 1.0.1）。
#  npm version minor: 增加次要版本号（例如从 1.0.0 或 1.1.0 到 1.2.0）。
#  npm version major: 增加主要版本号（例如从 1.0.0 或 1.x.y 到 2.0.0）。  npm version patch
  real() {
    npm publish --registry=https://registry.npmjs.org/
  }
}

clean() {
  _run rm -rf dist build node_modules;
}
deps() { npm install;}

tests() { vitest run;}

sha "$@"