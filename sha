#!/usr/bin/env bash
set -o errtrace  # -E trap inherited in sub script
set -o errexit   # -e
set -o functrace # -T If set, any trap on DEBUG and RETURN are inherited by shell functions
set -o pipefail  # default pipeline status==last command status, If set, status=any command fail


PA_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
cd "$PA_DIR"

# shellcheck disable=SC1091
source "./common.bash"



# nullglob选项默认off时：
# -------------------------.bash
# bash-5.2$ a=(./no_exists_dir/*/sha)
# bash-5.2$ declare -p a
# declare -a a=([0]="./no_exists_dir/*/sha")
# -------------------------
# 没有匹配到任何文件时，包含字符串字面量，这不是我们要的
#
# 而打开nullglob后：
# -------------------------.bash
# shopt -s nullglob
# bash-5.2$ a=(./no_exists_dir/*/sha)
# bash-5.2$ declare -p a
# declare -a a=()
# -------------------------s
# 空数组!这是我们想要的
shopt -s nullglob
all_workspaces_sha=(./sha ./packages/*/sha )

##########################################
# app cmd script
# 应用的命令脚本
##########################################
_all_workspaces() {
    for file_path in "${all_workspaces_sha[@]}"; do
      # 使用参数展开，移除字符串结尾的最短匹配 "/sha"
      dir_path="${file_path%/sha}"
      echo "$dir_path"
    done
}

all() {
  ls() {
      for project_dir in $(_all_workspaces); do
         echo "$project_dir"
      done
  }

  run() {
    for project_dir in $(_all_workspaces); do
       cd "$project_dir"
       _run "$@"
    done
  }

  clean() {
    for project_dir in $(_all_workspaces); do
       _run "$project_dir/sha" clean
    done
  }
  test() {
    for project_dir in $(_all_workspaces); do
       _run "$project_dir/sha" test
    done
  }
}

npm() {
  login() {
    # 指定--registry防止登陆跳转到镜像网站
    npm login --registry=https://registry.npmjs.org/
  }
}

clean() {
  echo "root workspace: clean"
}

test() {
  echo "root workspace: clean"
}

info2() {
  _run echo "out ip: $(curl ipinfo.io/ip 2>/dev/null)"
}

cli() {
#  _run "$PA_DIR/packages/cli/sha" || printf "%b\n" "------------------\n [cli $@], exit code($?)" ;
  _run "$PA_DIR/packages/core/sha" "$@" || printf "%b\n" "------------------\n [cli $@], exit code($?)" ;
}

sha "$@"